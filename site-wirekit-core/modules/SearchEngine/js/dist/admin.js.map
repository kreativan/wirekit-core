{"version":3,"sources":["src/Core.js","src/Tabs.js","src/Config.js","src/Debugger.js","admin.js"],"names":["PWSE_Core","document","addEventListener","window","pwse","dispatchEvent","CustomEvent","PWSE_Tabs","init","tabsParent","rememberActiveTab","tabContainers","querySelectorAll","length","forEach","tabContainer","tablist","querySelector","tabs","panels","currentTabNum","currentTabID","tabStash","localStorage","getItem","JSON","parse","hasOwnProperty","getAttribute","switchTab","oldTab","newTab","focus","removeAttribute","setAttribute","index","Array","prototype","indexOf","call","oldIndex","hidden","closest","setItem","stringify","tab","i","match","parentNode","e","preventDefault","currentTab","currentTarget","dir","which","panel","id","PWSE_Config","operatorDetails","getElementById","operatorDetailsToggle","createElement","classList","add","innerHTML","toggleAttribute","InputfieldColumnWidths","prepend","operatorSelect","setOperator","target","value","operatorButtons","button","operator","activeOperator","remove","node","style","transition","backgroundColor","setTimeout","config","PWSE_Debugger","debugContainers","configURL","ProcessWire","urls","admin","debugURL","debugContainer","debugButton","makeButton","icon","initIndex","initPage","initQuery","console","error","fetch","then","response","text","data","innerText","highlight","findCollapsed","reindexButton","debugPageID","parseInt","debugPageInput","previousSibling","contains","debugPageItem","dataQueue","pop","queueData","push","click","debugQuery","debugQueryArgs","key","prevQuery","encodeURIComponent","label","parent","sticky","insertBefore","appendChild","collapsedSections","collapsedSection","maxHeight","tagName","height","scrollHeight","overflowY","collapseButton","nextSibling","debugger"],"mappings":"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","file":"admin.js","sourceRoot":"..","sourcesContent":["/**\n * SearchEngine JS Core\n *\n * @version 0.1.1\n */\nclass PWSE_Core {\n\n    /**\n     * Constructor\n     */\n    constructor() {}\n\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    window.pwse = new PWSE_Core();\n    document.dispatchEvent(new CustomEvent('pwse_init'));\n});\n","/**\n * SearchEngine JS Tabs\n *\n * Based on https://inclusive-components.design/tabbed-interfaces/.\n *\n * @version 0.2.0\n */\nclass PWSE_Tabs {\n\n    /**\n     * Constructor method\n     */\n    constructor() {\n        this.init();\n    }\n\n    /**\n     * Init method\n     *\n     * @param {?Object} tabsParent Optional parent node for tabs.\n     * @param {Boolean} rememberActiveTab Remember active tab?\n     */\n    init(tabsParent = null, rememberActiveTab = true) {\n\n        // find tab containers\n        let tabContainers = [];\n        tabsParent = typeof tabsParent === 'Object' ? tabsParent : document;\n        tabContainers = tabsParent.querySelectorAll('.pwse-tabs');\n        if (!tabContainers.length) return;\n\n        tabContainers.forEach(tabContainer => {\n\n            // get relevant elements and collections\n            const tablist = tabContainer.querySelector('[role=\"tablist\"]');\n            const tabs = tablist.querySelectorAll('[role=\"tab\"]');\n            const panels = tabContainer.querySelectorAll(':scope > [role=\"tabpanel\"]');\n\n            // get tab stash from localStorage\n            let currentTabNum = 0;\n            let currentTabID = null;\n            if (rememberActiveTab) {\n                let tabStash = localStorage.getItem('pwse-tabs');\n                tabStash = tabStash ? JSON.parse(tabStash) : {};\n                if (tabStash.hasOwnProperty(tabContainer.getAttribute('id'))) {\n                    currentTabID = tabStash[tabContainer.getAttribute('id')];\n                }\n            }\n\n            // the tab switching function\n            const switchTab = (oldTab, newTab) => {\n                newTab.focus();\n                // Make the active tab focusable by the user (Tab key)\n                newTab.removeAttribute('tabindex');\n                // Set the selected state\n                newTab.setAttribute('aria-selected', 'true');\n                oldTab.removeAttribute('aria-selected');\n                oldTab.setAttribute('tabindex', '-1');\n                // Get the indices of the new and old tabs to find the correct\n                // tab panels to show and hide\n                let index = Array.prototype.indexOf.call(tabs, newTab);\n                let oldIndex = Array.prototype.indexOf.call(tabs, oldTab);\n                panels[oldIndex].hidden = true;\n                panels[index].hidden = false;\n                if (rememberActiveTab) {\n                    let tabStash = localStorage.getItem('pwse-tabs');\n                    tabStash = tabStash ? JSON.parse(tabStash) : {};\n                    tabStash[newTab.closest('.pwse-tabs').getAttribute('id')] = newTab.getAttribute('id');\n                    localStorage.setItem('pwse-tabs', JSON.stringify(tabStash));\n                }\n            }\n\n            // add semantics are remove user focusability for each tab\n            Array.prototype.forEach.call(tabs, (tab, i) => {\n\n                // check if this tab is currently active\n                if (tab.getAttribute('aria-selected') === 'true') {\n                    currentTabID = tab.getAttribute('id');\n                    currentTabNum = i;\n                }\n\n                // bail out early if link target is not to a hash\n                if (tab.getAttribute('href').match('#') === null) {\n                    return;\n                }\n\n                // set attributes\n                tab.setAttribute('role', 'tab');\n                tab.setAttribute('id', tabContainer.getAttribute('id') + '-' + (i + 1));\n                tab.setAttribute('tabindex', '-1');\n                tab.parentNode.setAttribute('role', 'presentation');\n\n                // check if this tab should be activated\n                if (rememberActiveTab && currentTabID === tab.getAttribute('id')) {\n                    currentTabNum = i;\n                }\n\n                // handle clicking of tabs for mouse users\n                tab.addEventListener('click', e => {\n                    e.preventDefault();\n                    let currentTab = tablist.querySelector('[aria-selected]');\n                    if (e.currentTarget !== currentTab) {\n                        switchTab(currentTab, e.currentTarget);\n                    }\n                });\n\n                // handle keydown events for keyboard users\n                tab.addEventListener('keydown', e => {\n                    // get the index of the current tab in the tabs node list\n                    let index = Array.prototype.indexOf.call(tabs, e.currentTarget);\n                    // work out which key the user is pressing and\n                    // calculate the new tab's index where appropriate\n                    let dir = e.which === 37 ? index - 1 : e.which === 39 ? index + 1 : e.which === 40 ? 'down' : null;\n                    if (dir !== null) {\n                        e.preventDefault();\n                        // if the down key is pressed, move focus to the open panel,\n                        // otherwise switch to the adjacent tab\n                        dir === 'down' ? panels[i].focus() : tabs[dir] ? switchTab(e.currentTarget, tabs[dir]) : void 0;\n                    }\n                });\n            });\n\n            // activate current tab\n            tabs[currentTabNum].removeAttribute('tabindex');\n            tabs[currentTabNum].setAttribute('aria-selected', 'true');\n\n            // add the tablist role to the first <ul> in the tab container\n            tablist.setAttribute('role', 'tablist');\n\n            // add tab panel semantics and hide all tab panels by default\n            Array.prototype.forEach.call(panels, (panel, i) => {\n                panel.setAttribute('role', 'tabpanel');\n                panel.setAttribute('tabindex', '-1');\n                panel.setAttribute('aria-labelledby', tabs[i].id);\n                panel.hidden = true;\n            });\n\n            // reveal current tab panel\n            panels[currentTabNum].hidden = false;\n        })\n    }\n\n}\n\ndocument.addEventListener(\"pwse_init\", function() {\n    window.pwse.tabs = new PWSE_Tabs();\n});\n","/**\n * SearchEngine JS Config\n *\n * @version 0.1.0\n */\nclass PWSE_Config {\n\n    /**\n     * Constructor method\n     */\n    constructor() {\n\n        // toggle operator details\n        const operatorDetails = document.getElementById('pwse-operator-details');\n        if (operatorDetails) {\n            operatorDetails.setAttribute('hidden', '');\n            const operatorDetailsToggle = document.createElement('button');\n            operatorDetailsToggle.classList.add('ui-button', 'ui-state-default');\n            operatorDetailsToggle.innerHTML = operatorDetails.getAttribute('data-toggle-label');\n            operatorDetailsToggle.innerHTML += ' <i class=\"fa fa-question-circle\"></i>';\n            operatorDetailsToggle.addEventListener('click', e => {\n                e.preventDefault();\n                operatorDetails.toggleAttribute('hidden');\n                if (typeof window.InputfieldColumnWidths === 'function') {\n                    window.InputfieldColumnWidths();\n                }\n            });\n            operatorDetails.parentNode.prepend(operatorDetailsToggle);\n            if (typeof window.InputfieldColumnWidths === 'function') {\n                window.InputfieldColumnWidths();\n            }\n\n            // operator select\n            const operatorSelect = document.getElementById('Inputfield_find_args__operator');\n            if (operatorSelect) {\n                operatorSelect.addEventListener('change', e => {\n                    this.setOperator(e.target.value);\n                });\n            }\n\n            // operator buttons\n            const operatorButtons = document.querySelectorAll('.pwse-operator-details__button');\n            if (operatorButtons.length) {\n                operatorButtons.forEach(button => {\n                    button.addEventListener('click', e => {\n                        e.preventDefault();\n                        this.setOperator(e.target.getAttribute('data-operator'));\n                    });\n                });\n            }\n        }\n    }\n\n    /**\n     * Set operator\n     *\n     * @param {String} operator\n     */\n    setOperator(operator) {\n        const activeOperator = document.querySelector('.pwse-operator-details__list-item--active');\n        if (activeOperator) {\n            activeOperator.classList.remove('pwse-operator-details__list-item--active');\n        }\n        const operatorButton = document.querySelector('button[data-operator=\"' + operator + '\"]');\n        operatorButton.closest('.pwse-operator-details__list-item').classList.add('pwse-operator-details__list-item--active');\n        document.getElementById('Inputfield_find_args__operator').value = operator;\n    }\n\n    /**\n     * Highlight (blink/flash) a DOM node\n     *\n     * @param {object} node DOM node\n     */\n    highlight(node) {\n        node.style.transition = 'all .25s ease-in-out';\n        node.style.backgroundColor = 'lightyellow';\n        setTimeout(() => {\n            node.style.backgroundColor = null;\n            setTimeout(() => {\n                node.style.transition = null;\n            }, 250);\n        }, 1000);\n    }\n}\n\ndocument.addEventListener(\"pwse_init\", function() {\n    window.pwse.config = new PWSE_Config();\n});\n","/**\n * SearchEngine JS Debugger\n *\n * @version 0.5.1\n */\nclass PWSE_Debugger {\n\n    /**\n     * Constructor method\n     */\n    constructor() {\n\n        // find debug containers\n        const debugContainers = document.querySelectorAll('.pwse-debug');\n\n        if (debugContainers.length) {\n\n            // define base url for debug requests\n            this.configURL = ProcessWire.config.urls.admin + 'module/edit?name=SearchEngine';\n            this.debugURL = this.configURL + '&se-debug=1&';\n\n            debugContainers.forEach(debugContainer => {\n\n                // add debug button\n                const debugButton = this.makeButton(debugContainer.getAttribute('data-debug-button-label'), debugContainer, true);\n                debugButton.icon.setAttribute('class', 'fa fa-bug');\n\n                switch (debugContainer.getAttribute('data-type')) {\n                    case 'index':\n                        this.initIndex(debugContainer, debugButton)\n                        break;\n                    case 'page':\n                        this.initPage(debugContainer, debugButton);\n                        break;\n                    case 'query':\n                        this.initQuery(debugContainer, debugButton);\n                        break;\n                    default:\n                        console.error('Unidentified debug container type (' + debugContainer.getAttribute('data-type') + ')');\n                }\n            });\n        }\n    }\n\n    /**\n     * Init index debug container\n     *\n     * @param {object} debugContainer\n     * @param {object} debugButton\n     */\n    initIndex(debugContainer, debugButton) {\n\n        // enable debug button\n        debugButton.button.removeAttribute('disabled');\n        debugButton.button.setAttribute('class', 'ui-button ui-state-default');\n\n        // listen to debug button click event\n        debugButton.button.addEventListener(\"click\", e => {\n            e.preventDefault();\n            debugButton.button.setAttribute('disabled', 'disabled');\n            debugButton.button.setAttribute('class', 'ui-button ui-state-disabled');\n            debugButton.icon.classList.add('fa-spin');\n            fetch(this.debugURL + 'se-debug-index=1')\n                .then(response => response.text())\n                .then(data => {\n\n                    // update debug button\n                    debugButton.text.innerText = debugContainer.getAttribute('data-refresh-button-label');\n                    debugButton.icon.setAttribute('class', 'fa fa-refresh');\n                    debugButton.button.removeAttribute('disabled');\n                    debugButton.button.setAttribute('class', 'ui-button ui-state-default');\n\n                    // update and highlight debug container\n                    debugContainer.innerHTML = data;\n                    debugContainer.setAttribute('style', 'margin-top: 2rem');\n                    this.highlight(debugContainer);\n\n                    // find collapsed sections\n                    this.findCollapsed(debugContainer);\n\n                    // init tabs\n                    window.pwse.tabs.init(debugContainer);\n                });\n        });\n    }\n\n    /**\n     * Init page debug container\n     *\n     * @param {object} debugContainer\n     * @param {object} debugButton\n     */\n    initPage(debugContainer, debugButton) {\n\n        // add \"reindex\" button\n        const reindexButton = this.makeButton(debugContainer.getAttribute('data-reindex-button-label'), debugContainer, true);\n\n        // get debug page ID\n        let debugPageID = parseInt(debugContainer.getAttribute('data-page-id'));\n        if (debugPageID) {\n            debugButton.button.removeAttribute('disabled');\n            debugButton.button.setAttribute('class', 'ui-button ui-state-default');\n            reindexButton.button.removeAttribute('disabled');\n            reindexButton.button.setAttribute('class', 'ui-button ui-state-default');\n        }\n\n        // listen to page select event\n        const debugPageInput = document.getElementById('Inputfield_debugger_page');\n        debugPageInput.previousSibling.addEventListener(\"click\", e => {\n            if (!e.target.parentNode.classList.contains('PageListActionSelect')) return;\n            let debugPageItem = e.target.closest('.PageListItem');\n            debugPageID = debugPageItem.getAttribute('class').match(/(?!PageList)([0-9])+/)[0];\n            debugContainer.innerHTML = '';\n            debugContainer.setAttribute('style', 'margin-top: 0');\n            debugButton.text.innerText = debugContainer.getAttribute('data-debug-button-label');\n            debugButton.icon.setAttribute('class', 'fa fa-bug');\n            if (debugPageID && (debugPageInput.value != debugPageID)) {\n                debugButton.button.removeAttribute('disabled');\n                debugButton.button.setAttribute('class', 'ui-button ui-state-default');\n                reindexButton.button.removeAttribute('disabled');\n                reindexButton.button.setAttribute('class', 'ui-button ui-state-default');\n            } else {\n                debugButton.button.setAttribute('disabled', 'disabled')\n                debugButton.button.setAttribute('class', 'ui-button ui-state-disabled');\n                reindexButton.button.setAttribute('disabled', 'disabled')\n                reindexButton.button.setAttribute('class', 'ui-button ui-state-disabled');\n            }\n        }, true);\n\n        // data queue\n        const dataQueue = [];\n\n        // listen to debug button click event\n        debugButton.button.addEventListener(\"click\", e => {\n            e.preventDefault();\n            debugButton.button.setAttribute('disabled', 'disabled');\n            debugButton.button.setAttribute('class', 'ui-button ui-state-disabled');\n            debugButton.icon.classList.add('fa-spin');\n            fetch(this.debugURL + 'se-debug-page-id=' + debugPageID)\n                .then(response => response.text())\n                .then(data => {\n                    debugButton.text.innerText = debugContainer.getAttribute('data-refresh-button-label');\n                    debugButton.icon.setAttribute('class', 'fa fa-refresh');\n                    debugButton.button.removeAttribute('disabled');\n                    debugButton.button.setAttribute('class', 'ui-button ui-state-default');\n                    debugContainer.innerHTML = data;\n                    if (dataQueue.length) {\n                        debugContainer.innerHTML = dataQueue.pop() + debugContainer.innerHTML;\n                    }\n                    const queueData = debugContainer.queueData\n                    debugContainer.setAttribute('style', 'margin-top: 2rem');\n                    this.highlight(debugContainer);\n                    this.findCollapsed(debugContainer);\n                    window.pwse.tabs.init(debugContainer);\n                });\n        });\n\n        // listen to reindex button click event\n        reindexButton.button.addEventListener(\"click\", e => {\n            e.preventDefault();\n            reindexButton.button.setAttribute('disabled', 'disabled');\n            reindexButton.button.setAttribute('class', 'ui-button ui-state-disabled');\n            reindexButton.icon.classList.add('fa-spin');\n            fetch(this.debugURL + 'se-reindex-page-id=' + debugPageID)\n                .then(response => response.text())\n                .then(data => {\n                    reindexButton.icon.classList.remove('fa-spin');\n                    reindexButton.button.removeAttribute('disabled');\n                    reindexButton.button.setAttribute('class', 'ui-button ui-state-default');\n                    dataQueue.push(data);\n                    debugButton.button.click();\n                });\n        });\n    }\n\n    /**\n     * Init query debug container\n     *\n     * @param {object} debugContainer\n     * @param {object} debugButton\n     */\n    initQuery(debugContainer, debugButton) {\n\n        // get debug query\n        let debugQuery = debugContainer.getAttribute('data-query');\n        if (debugQuery) {\n            debugButton.button.removeAttribute('disabled');\n            debugButton.button.setAttribute('class', 'ui-button ui-state-default');\n        }\n\n        // get debug query args\n        const debugQueryArgs = document.getElementById('Inputfield_debugger_query_args');\n\n        // listen to keyup event\n        document.getElementById('Inputfield_debugger_query').addEventListener(\"keyup\", function(e) {\n            if (e.key == 'Enter') {\n                e.preventDefault();\n            }\n            debugQuery = e.target.value;\n            if (debugQuery) {\n                debugButton.button.removeAttribute('disabled');\n                debugButton.button.setAttribute('class', 'ui-button ui-state-default');\n                debugButton.text\n                    .innerText = debugContainer.getAttribute('data-' + (debugQuery == prevQuery ? 'refresh' : 'debug') + '-button-label');\n                if (e.key == 'Enter') {\n                    debugButton.button.click();\n                }\n            } else {\n                debugButton.button.setAttribute('disabled', 'disabled');\n                debugButton.button.setAttribute('class', 'ui-button ui-state-disabled');\n                debugButton.text\n                    .innerText = debugContainer.getAttribute('data-debug-button-label');\n            }\n        });\n\n        // listen to debug button click event\n        let prevQuery = debugQuery;\n        debugButton.button.addEventListener(\"click\", e => {\n            e.preventDefault();\n            debugButton.button.setAttribute('disabled', 'disabled');\n            debugButton.button.setAttribute('class', 'ui-button ui-state-disabled');\n            debugButton.icon.classList.add('fa-spin');\n            fetch(\n                this.debugURL\n                + 'se-debug-query=' + encodeURIComponent(debugQuery)\n                + '&se-debug-query-args=' + encodeURIComponent(JSON.stringify(JSON.parse(debugQueryArgs.value)))\n            )\n                .then(response => response.text())\n                .then(data => {\n                    prevQuery = debugQuery;\n                    debugButton.text.innerText = debugContainer.getAttribute('data-refresh-button-label');\n                    debugButton.icon.setAttribute('class', 'fa fa-refresh');\n                    debugButton.button.removeAttribute('disabled');\n                    debugButton.button.setAttribute('class', 'ui-button ui-state-default');\n                    debugContainer.innerHTML = data;\n                    debugContainer.setAttribute('style', 'margin-top: 2rem');\n                    this.highlight(debugContainer);\n                    window.pwse.tabs.init(debugContainer);\n                });\n        });\n    }\n\n    /**\n     * Highlight (blink/flash) a DOM node\n     *\n     * @param {object} node DOM node\n     */\n    highlight(node) {\n        node.style.transition = 'all .25s ease-in-out';\n        node.style.backgroundColor = 'lightyellow';\n        setTimeout(() => {\n            node.style.backgroundColor = null;\n            setTimeout(() => {\n                node.style.transition = null;\n            }, 250);\n        }, 1000);\n    }\n\n    /**\n     * Create new button\n     *\n     * @param {string} label Label for the button\n     * @param {object} [parent] Parent DOM node\n     * @param {boolean} [sticky] Sticky button?\n     * @return {object} Button\n     */\n    makeButton(label, parent, sticky) {\n        const button = {\n            button: document.createElement('button'),\n            text: document.createElement('span'),\n            icon: document.createElement('i'),\n        };\n        button.button.setAttribute('class', 'ui-button ui-state-disabled');\n        button.button.setAttribute('disabled', 'disabled');\n        if (typeof sticky !== 'undefined' && sticky !== false) {\n            button.button.setAttribute('style', 'position: sticky; top: 1rem; z-index: 1');\n        }\n        if (typeof parent !== 'undefined') {\n            parent.parentNode.insertBefore(button.button, parent);\n        }\n        button.text.innerText = label;\n        button.button.appendChild(button.text);\n        button.icon.setAttribute('class', 'fa fa-refresh');\n        button.icon.setAttribute('style', 'margin-left: .5rem');\n        button.button.appendChild(button.icon);\n        return button;\n    }\n\n    /**\n     * Find collapsed elements and add show more/less buttons\n     *\n     * @param {object} parent Parent DOM node\n     */\n    findCollapsed(parent) {\n        const maxHeight = 400;\n        const collapsedSections = parent.querySelectorAll('.pwse-collapse');\n        if (collapsedSections.length) {\n            collapsedSections.forEach(collapsedSection => {\n                collapsedSection.style.maxHeight = maxHeight + 'px';\n                if (collapsedSection.tagName === 'TEXTAREA') {\n                    collapsedSection.style.height = (collapsedSection.scrollHeight + 2) + 'px';\n                }\n                collapsedSection.style.overflowY = 'auto';\n                if ((collapsedSection.scrollHeight + 2) > maxHeight) {\n                    const collapseButton = this.makeButton(parent.getAttribute('data-show-more-button-label'));\n                    collapseButton.button.setAttribute('class', 'ui-button ui-state-default');\n                    collapseButton.icon.setAttribute('class', 'fa fa-chevron-down');\n                    collapseButton.button.addEventListener('click', e => {\n                        e.preventDefault();\n                        if (collapsedSection.style.maxHeight) {\n                            collapsedSection.style.maxHeight = null;\n                            collapseButton.text.innerText = parent.getAttribute('data-show-less-button-label');\n                            collapseButton.icon.setAttribute('class', 'fa fa-chevron-up');\n                        } else {\n                            collapsedSection.style.maxHeight = maxHeight + 'px';\n                            collapseButton.text.innerText = parent.getAttribute('data-show-more-button-label');\n                            collapseButton.icon.setAttribute('class', 'fa fa-chevron-down');\n                        }\n                        collapseButton.button.removeAttribute('disabled');\n                        collapseButton.button.setAttribute('class', 'ui-button ui-state-default');\n                        this.highlight(collapsedSection);\n                    });\n                    collapseButton.button.removeAttribute('disabled');\n                    collapsedSection.parentNode.insertBefore(collapseButton.button, collapsedSection.nextSibling);\n                }\n            });\n        }\n    }\n\n}\n\ndocument.addEventListener(\"pwse_init\", function() {\n    window.pwse.debugger = new PWSE_Debugger();\n});\n","import './src/Core.js'\nimport './src/Tabs.js'\nimport './src/Config.js'\nimport './src/Debugger.js'\n"]}